from telegram import Update, ReplyKeyboardRemove
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
    CommandHandler,
    MessageHandler,
    filters,
)

from services import location_service, weather_service
from utils import plot_utils
from storage.location_storage import save_user_location

# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM
ASK_LOCATION, CONFIRM_SAVE = range(2)

# –ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è –ø–æ —Å–ª–æ–≤—É "–ø–æ–≥–æ–¥–∞"
async def handle_weather_request(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "üåç –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –ª–æ–∫–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ù—å—é-–ô–æ—Ä–∫):"
    )
    return ASK_LOCATION

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
async def process_location(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    city = update.message.text.strip()
    coords = location_service.get_coordinates(city)

    if not coords:
        await update.message.reply_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ª–æ–∫–∞—Ü–∏—é. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞."
        )
        return ASK_LOCATION

    context.user_data["pending_location"] = {
        "city": city,
        "coords": coords,
    }

    await update.message.reply_text(
        f"üìç –ù–∞–π–¥–µ–Ω–æ: {city}\n–®–∏—Ä–æ—Ç–∞: {coords['lat']}, –î–æ–ª–≥–æ—Ç–∞: {coords['lon']}\n\n"
        "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç—É –ª–æ–∫–∞—Ü–∏—é –Ω–∞ –±—É–¥—É—â–µ–µ? (–¥–∞/–Ω–µ—Ç)"
    )
    return CONFIRM_SAVE

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –ø–æ–∫–∞–∑ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
async def confirm_save_location(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    text = update.message.text.strip().lower()
    pending = context.user_data.get("pending_location")

    if not pending:
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return ConversationHandler.END

    if text in ("–¥–∞", "—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å", "–∞–≥–∞", "–æ–∫"):
        save_user_location(update.effective_user.id, pending['coords'])
        await update.message.reply_text("‚úÖ –õ–æ–∫–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
    else:
        await update.message.reply_text("üó∫Ô∏è –õ–æ–∫–∞—Ü–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å.")

    await update.message.reply_text("‚è≥ –ü–æ–ª—É—á–∞—é –ø—Ä–æ–≥–Ω–æ–∑ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é –≥—Ä–∞—Ñ–∏–∫–∏...")

    forecast = weather_service.get_weather_forecast(pending['coords'])

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
    for plot_func in [
        plot_utils.plot_forecast,
        plot_utils.plot_wind,
        plot_utils.plot_precipitation,
        plot_utils.plot_weather_description,
    ]:
        try:
            image_path = plot_func(forecast)
            with open(image_path, "rb") as img:
                await update.message.reply_photo(img)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞: {e}")

    await update.message.reply_text("üì° –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º.")
    return ConversationHandler.END

# –û—Ç–º–µ–Ω–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

# ConversationHandler –¥–ª—è –ø–æ–≥–æ–¥—ã
weather_conversation_handler = ConversationHandler(
    entry_points=[MessageHandler(filters.Regex("^(–ø–æ–≥–æ–¥–∞|–ü–æ–≥–æ–¥–∞)$"), handle_weather_request)],
    states={
        ASK_LOCATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_location)],
        CONFIRM_SAVE: [MessageHandler(filters.TEXT & ~filters.COMMAND, confirm_save_location)],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)
