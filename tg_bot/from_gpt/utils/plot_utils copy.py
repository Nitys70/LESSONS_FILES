import matplotlib.pyplot as plt
from datetime import datetime
import os
import random

# –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
def _save_plot(fig, name_prefix="weather_plot"):
    os.makedirs("data/plots", exist_ok=True)
    filename = f"data/plots/{name_prefix}_{random.randint(1000,9999)}.png"
    fig.savefig(filename, bbox_inches="tight")
    plt.close(fig)
    return filename

# –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
def plot_forecast(forecast):
    hours = [datetime.fromtimestamp(f["dt"]).strftime("%d %H:%M") for f in forecast]
    temp = [f["temp"] for f in forecast]

    fig, ax = plt.subplots(figsize=(10, 4))
    ax.plot(hours, temp, marker="o", color="tab:red", label="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞")
    ax.set_xticks(hours[::6])
    ax.set_xticklabels(hours[::6], rotation=45, ha="right")
    ax.set_title("üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ 2 —Å—É—Ç–æ–∫")
    ax.set_ylabel("¬∞C")
    ax.grid(True)
    ax.legend()

    return _save_plot(fig, "temp")

# –í–µ—Ç–µ—Ä –∏ –ø–æ—Ä—ã–≤—ã
def plot_wind(forecast):
    hours = [datetime.fromtimestamp(f["dt"]).strftime("%d %H:%M") for f in forecast]
    wind_speed = [f["wind_speed"] for f in forecast]
    gusts = [f.get("wind_gust", 0) for f in forecast]

    fig, ax = plt.subplots(figsize=(10, 4))
    ax.plot(hours, wind_speed, marker="o", label="–í–µ—Ç–µ—Ä (–º/—Å)", color="tab:blue")
    ax.plot(hours, gusts, marker="x", label="–ü–æ—Ä—ã–≤—ã", color="tab:orange")
    ax.set_xticks(hours[::6])
    ax.set_xticklabels(hours[::6], rotation=45, ha="right")
    ax.set_title("üí® –í–µ—Ç–µ—Ä –∏ –ø–æ—Ä—ã–≤—ã")
    ax.set_ylabel("–º/—Å")
    ax.grid(True)
    ax.legend()

    return _save_plot(fig, "wind")

# –û—Å–∞–¥–∫–∏
def plot_precipitation(forecast):
    hours = [datetime.fromtimestamp(f["dt"]).strftime("%d %H:%M") for f in forecast]
    precipitation = [f.get("pop", 0) * 100 for f in forecast]

    fig, ax = plt.subplots(figsize=(10, 4))
    ax.bar(hours, precipitation, color="tab:purple")
    ax.set_xticks(hours[::6])
    ax.set_xticklabels(hours[::6], rotation=45, ha="right")
    ax.set_title("üåßÔ∏è –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤")
    ax.set_ylabel("%")
    ax.grid(True)

    return _save_plot(fig, "precip")

# –ü–æ–≥–æ–¥–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è (–æ–±–ª–∞—á–Ω–æ—Å—Ç—å –∏ –æ–ø–∏—Å–∞–Ω–∏–µ)
def plot_weather_description(forecast):
    hours = [datetime.fromtimestamp(f["dt"]).strftime("%d %H:%M") for f in forecast]
    clouds = [f["clouds"] for f in forecast]
    descriptions = [f["weather"][0]["description"].capitalize() for f in forecast]

    fig, ax1 = plt.subplots(figsize=(10, 4))
    ax1.plot(hours, clouds, color="gray", marker="o", label="–û–±–ª–∞—á–Ω–æ—Å—Ç—å (%)")
    ax1.set_xticks(hours[::6])
    ax1.set_xticklabels(hours[::6], rotation=45, ha="right")
    ax1.set_ylabel("–û–±–ª–∞—á–Ω–æ—Å—Ç—å (%)")
    ax1.set_title("‚õÖ –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è")
    ax1.grid(True)

    # –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã –∫–∞–∫ –ø–æ–¥–ø–∏—Å–∏
    for i in range(0, len(hours), 6):
        ax1.text(i, clouds[i] + 5, descriptions[i], fontsize=7, ha="center", rotation=45)

    return _save_plot(fig, "description")
